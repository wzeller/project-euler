#Even Fibonacci numbers
#Problem 2
#Each new term in the Fibonacci sequence is generated by 
#adding the previous two terms. By starting with 1 and 2, 
#the first 10 terms will be:

#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

#By considering the terms in the Fibonacci sequence 
#whose values do not exceed four million, find the sum 
#of the even-valued terms.

#Script finds correct answer (4613732) in 0.0s.

def sumOfEvenFibonacciNumbersUnderN(n)

#first we generate fibonacci sequence under n

fibonacci = [1,2]

until fibonacci[-1] > n

	fibonacci << fibonacci[-1] + fibonacci[-2]
	
end

#removes the last number, which is over the threshold
fibonacci.delete_at(-1)

#deletes all odd numbers
fibonacci.delete_if{|x| x.odd?}

#puts the sum of the remaining even fibonacci numbers between 1 and n
puts fibonacci.inject(:+)

end

sumOfEvenFibonacciNumbersUnderN(4000000)
